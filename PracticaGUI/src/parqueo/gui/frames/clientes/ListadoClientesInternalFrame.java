package parqueo.gui.frames.clientes;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import parqueo.backend.modelos.parqueo.Parqueo;
import parqueo.backend.modelos.personas.Cliente;
import parqueo.backend.modelos.personas.Persona;
import parqueo.backend.personas.clientes.ManejadorClientes;

/**
 *
 * @author jose
 */
public class ListadoClientesInternalFrame extends javax.swing.JInternalFrame {

	private ManejadorClientes manejadorClientes;

	private ObservableList<Cliente> clientes;
	private List<Cliente> clientesList;
	private ClienteDataDialog clienteDataDialog;
	private Cliente clienteSeleccionado;

	/**
	 * Creates new form ListadoClientesInternalFrame
	 * @param manejadorClientes
	 */
	public ListadoClientesInternalFrame(ManejadorClientes manejadorClientes) {
		this.manejadorClientes = manejadorClientes;
		clientesList = new ArrayList<>();
		clientes = ObservableCollections.observableList(clientesList);
		clienteDataDialog = new ClienteDataDialog(true, manejadorClientes);
		clienteSeleccionado = new Cliente();
		initComponents();
		
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING:
	 * Do NOT modify this code. The content of this method is always regenerated by the
	 * Form Editor.
	 */
	@SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {
          bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

          busquedaLabel = new javax.swing.JLabel();
          jScrollPane1 = new javax.swing.JScrollPane();
          clientesTable = new javax.swing.JTable();
          listaInfoLabel = new javax.swing.JLabel();
          listaPanel = new javax.swing.JPanel();
          nombreFiltroText = new javax.swing.JTextField();
          cuiFiltroText = new javax.swing.JTextField();
          cuiFiltroLabel = new javax.swing.JLabel();
          nombreFiltroLabel = new javax.swing.JLabel();
          nitFiltroText = new javax.swing.JTextField();
          nitFiltroLabel = new javax.swing.JLabel();
          buscarButton = new javax.swing.JButton();
          crearButton = new javax.swing.JButton();
          limpiarButton = new javax.swing.JButton();
          actualizarButton = new javax.swing.JButton();

          setClosable(true);
          setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
          setIconifiable(true);
          setMaximizable(true);
          setResizable(true);
          setTitle("Listado de clientes");

          busquedaLabel.setText("Busqueda de clientes:");

          clientesTable.getTableHeader().setReorderingAllowed(false);

          org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${clientes}");
          org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, clientesTable);
          org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${NIT}"));
          columnBinding.setColumnName("NIT");
          columnBinding.setColumnClass(String.class);
          columnBinding.setEditable(false);
          columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${CUI}"));
          columnBinding.setColumnName("CUI");
          columnBinding.setColumnClass(String.class);
          columnBinding.setEditable(false);
          columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
          columnBinding.setColumnName("Nombre");
          columnBinding.setColumnClass(String.class);
          columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${direccion}"));
          columnBinding.setColumnName("Direccion");
          columnBinding.setColumnClass(String.class);
          columnBinding.setEditable(false);
          bindingGroup.addBinding(jTableBinding);
          jTableBinding.bind();org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${clienteSeleccionado}"), clientesTable, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
          bindingGroup.addBinding(binding);

          jScrollPane1.setViewportView(clientesTable);

          listaInfoLabel.setText("Sleccione una fila para abrir la pantalla de modificaci√≥n.");

          cuiFiltroLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
          cuiFiltroLabel.setText("CUI:");

          nombreFiltroLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
          nombreFiltroLabel.setText("Nombre:");

          nitFiltroLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
          nitFiltroLabel.setText("NIT:");

          buscarButton.setText("Buscar");
          buscarButton.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    buscarButtonActionPerformed(evt);
               }
          });

          crearButton.setText("Crear");
          crearButton.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    crearButtonActionPerformed(evt);
               }
          });

          limpiarButton.setText("Limpiar");

          actualizarButton.setText("Modificar");
          actualizarButton.setEnabled(false);
          actualizarButton.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    actualizarButtonActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout listaPanelLayout = new javax.swing.GroupLayout(listaPanel);
          listaPanel.setLayout(listaPanelLayout);
          listaPanelLayout.setHorizontalGroup(
               listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(crearButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(actualizarButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(limpiarButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buscarButton))
               .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaPanelLayout.createSequentialGroup()
                         .addContainerGap()
                         .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                              .addComponent(nombreFiltroLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(cuiFiltroLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(nitFiltroLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                         .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(nitFiltroText)
                              .addComponent(cuiFiltroText)
                              .addComponent(nombreFiltroText, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addContainerGap(370, Short.MAX_VALUE)))
          );
          listaPanelLayout.setVerticalGroup(
               listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPanelLayout.createSequentialGroup()
                    .addContainerGap(104, Short.MAX_VALUE)
                    .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(buscarButton)
                         .addComponent(crearButton)
                         .addComponent(limpiarButton)
                         .addComponent(actualizarButton))
                    .addContainerGap())
               .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaPanelLayout.createSequentialGroup()
                         .addGap(3, 3, 3)
                         .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(nitFiltroLabel)
                              .addComponent(nitFiltroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                         .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(cuiFiltroLabel)
                              .addComponent(cuiFiltroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                         .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(nombreFiltroLabel)
                              .addComponent(nombreFiltroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addContainerGap(45, Short.MAX_VALUE)))
          );

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(listaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(busquedaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(jScrollPane1)
                         .addGroup(layout.createSequentialGroup()
                              .addComponent(listaInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                              .addGap(84, 84, 84)))
                    .addContainerGap())
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(busquedaLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(listaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(listaInfoLabel)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addContainerGap())
          );

          bindingGroup.bind();

          pack();
     }// </editor-fold>//GEN-END:initComponents

     private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
		actualizarListadoClientes(manejadorClientes.buscarClientes());
		setClienteSeleccionado(null);
     }//GEN-LAST:event_buscarButtonActionPerformed

     private void crearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearButtonActionPerformed
          this.clienteDataDialog.mostrarParaCrear();
		Cliente nuevo = clienteDataDialog.getCliente();
		if (nuevo != null) {
			JOptionPane.showMessageDialog(this.getParent(), "El cliente con NIT: " + nuevo.getNIT() 
				   + " ha sido creado", "Info", JOptionPane.INFORMATION_MESSAGE);
		}
     }//GEN-LAST:event_crearButtonActionPerformed

     private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed
          clienteDataDialog.mostrarParaEditar(clienteSeleccionado);
     }//GEN-LAST:event_actualizarButtonActionPerformed

	public void actualizarListadoClientes(List<Persona> listadoClientes) {
		this.clientes.clear();
		this.clientes.addAll((List<Cliente>) (List<?>) listadoClientes);
	}

	public ObservableList<Cliente> getClientes() {
		return clientes;
	}

	public void setClientes(ObservableList<Cliente> clientes) {
		this.clientes = clientes;
	}

	public Cliente getClienteSeleccionado() {
		return clienteSeleccionado;
	}

	public void setClienteSeleccionado(Cliente clienteSeleccionado) {
		if (clienteSeleccionado != null) {
			this.clienteSeleccionado = clienteSeleccionado.clonarDatos();
			actualizarButton.setEnabled(true);
		} else {
			actualizarButton.setEnabled(false);
			this.clienteSeleccionado = null;
		}
	}

	
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton actualizarButton;
     private javax.swing.JButton buscarButton;
     private javax.swing.JLabel busquedaLabel;
     private javax.swing.JTable clientesTable;
     private javax.swing.JButton crearButton;
     private javax.swing.JLabel cuiFiltroLabel;
     private javax.swing.JTextField cuiFiltroText;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JButton limpiarButton;
     private javax.swing.JLabel listaInfoLabel;
     private javax.swing.JPanel listaPanel;
     private javax.swing.JLabel nitFiltroLabel;
     private javax.swing.JTextField nitFiltroText;
     private javax.swing.JLabel nombreFiltroLabel;
     private javax.swing.JTextField nombreFiltroText;
     private org.jdesktop.beansbinding.BindingGroup bindingGroup;
     // End of variables declaration//GEN-END:variables
}
